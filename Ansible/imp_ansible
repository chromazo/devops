Configuration management system

uses push mechanism, agentless, uses YAML manisfest, easy to use, support linux(SSH protocol); windows(winRM protocol). uses Python

how to install ansible: easy way use package manager of the linux distro. eg for ubuntu: sudo apt-get install ansible
to generate ssh key: ssh-keygen

keys will be used to configure passwodless authentication with target machine. the target machine should have the public key of the main machine in its /root/.ssh/autorised_keys. This could be in root or home. 
never to share private key with anyone, if needed to connect use public key.
In azure while creating vm's we can use the same public key on all servers.

check ansible version: ansible --version
Ansible playbooks are like shell scripts, they are the files.
no need to always like playbooks, we could run ansible commands from the CLI(Ansible adhoc commands) it depends on the task

inventory file: file which store IP address of target servers.
by default ansible stores the inventory file in /etc/ansible/hosts , but we can create and store inventory file in any location we want. 

ad hoc command:
ansible -i <inventory file path> <target IP address> -m "shell" -a "touch newfile"
eg: ansible -i /home/inventory 10.0.0.1 -m "shell" -a "touch newfile" 
or ansible -i /home/inventory all -m "shell" -a "touch newfile" 
here a= arguments, m= module

--  ansible -i /home/azadmin/Ansible/inventory 10.0.0.5 -m "shell" -a "df -hT"
--  ansible -i /home/azadmin/Ansible/inventory 10.0.0.5 -m "shell" -a "free -h"
--  ansible -i /home/azadmin/Ansible/inventory 10.0.0.5 -m "shell" -a "nproc"

search ansible modules, to get info of all the modules in ansible

-- how to group target vm's or how to perform task on certain vm's only
  do grouping in inventory file by using []
eg: in the inventory file
[webserver]
10.0.0.1
10.0.0.2
[dbserver]
10.0.0.3

playbook format: playbook_name.yml

how to run playbook: ansible-playbook -i <inventory_path> <playbook_name>
with verbose: ansible-playbook -i -v <inventory_path> <playbook_name>

ansible roles
ansible-galaxy role init Kubernetes  --> Kubernetes folder will be created with many subfolder imp for a playbook segregation

