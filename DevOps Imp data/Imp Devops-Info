##  All about Automation in SDLC

-- SDlC stages
-Planning
-Design
-Development
-Testing
-Deployment
-Monitoring

====================================================================================
====================================================================================

##  Configuration management

tools: Puppet, Chef, Ansible(Redhat managed, most used)

Puppet - 
--- pull mechanism
--- Master-slave/master-agent
--- Puppet language

Why Ansible over others?
Ansible uses push mechanism model. Write Ansible script at one instance and update all the worker nodes. Ansible is agentless, just put DNS or ip adress of servers in inventory file and have ssh password-less authentication configured, along with python3 installed by default in Linux distros. 
2. Ansible also has feature of dynamic inventory. If you are creating 100s of servers in AWS cloud,  Ansible will automatically detect new server.
3. Support both Windows, AIX and Linux all distros
4. Ansible is pretty simple, uses simple yaml manifest.
5. can write own Ansible modules
cons: debugging, issues with performance, windows

Interview questions
- what is the programming language which ansible use --> python
- does ansible support windows, Linux? yes supports both windows(protocol - win RM), Linux(protocol - SSH) 
- difference between puppet/chef and Ansible or why we chose Ansible over other configuration management tools
- is ansible push or pull mechanism --> Push mechanism
- what language ansible uses to write playbook - YAML
- Does Ansible supports all cloud provider? cloud provider doesn't matter, we require public access/SSH connection is allowed from ansible to the machine(win RM in windows)
